plugins {
    id "org.springframework.boot" version "2.2.1.RELEASE"
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id "org.asciidoctor.convert" version "1.5.9.2"
}

group = 'ex.marketboro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    jcenter()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.4.RELEASE'

    implementation('org.springframework.boot:spring-boot-starter-hateoas')

}

ext {
    snippetsDir = file('build/generated-snippets')
}


test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor.doFirst {
    println "=====start asciidoctor"
    //asciidoctor 실행전 기존에 생성된 API 문서 삭제
    delete file('src/main/resources/static/docs')
}
asciidoctor.doLast {
    println "=====finish asciidoctor"
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5/") {
        into 'static/docs'
    }
    from ("${asciidoctor.outputDir}/html5/member/") {
        into 'static/docs/member'
    }
    from ("${asciidoctor.outputDir}/html5/member/goods/") {
        into 'static/docs/goods'
    }
}